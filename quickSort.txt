#include<iostream>

using namespace std; 

int partition ( int arr[] , int beg , int end)
{
    int pivot = arr[end];
    int pIndex = beg;
    
    for(int i=beg; i<end ; i++)
    {
       if(arr[i]<=pivot)
       {
           int temp = arr[i];
           arr[i]= arr[pIndex];
           arr[pIndex] = temp;
           pIndex++;
       } 
    }
    
    int temp = arr[pIndex];
    arr[pIndex] = arr[end];
    arr[end] = temp;
    
    return pIndex;
    
}

void quickSort ( int arr[] , int beg , int end)

{   
    
    if( beg < end)
    {
        int pIndex = partition(arr, beg ,end); 
        quickSort(arr , beg , pIndex-1);
        quickSort(arr , pIndex+1,end);
    }
}

void display(int A[], int size) 
{ 
    int i; 
    for (i = 0; i < size; i++) 
       cout<<A[i]<<"\t";
} 

int main()
{  clock_t t; 
   t = clock(); 
   cout << "The array before sorting" << endl <<endl;
   int arr[] = { 11,8,7,12,5,4,3,2,};
   
   display(arr,8);
   
   cout<<endl;
   
   int beg = 0;
   int end = 7;
   
   quickSort(arr,beg ,end);
   cout<<endl;
   cout << "The array after sorting" << endl <<endl;
   display(arr,8);
   cout<<endl<<endl;
   t = clock() - t; 
   double time_taken = ((double)t)/CLOCKS_PER_SEC; // in seconds 
  
   cout<<"The quick sort took "<<time_taken<<" seconds";
   
   
   return 0;
}